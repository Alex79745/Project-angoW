name: Frontend + Backend CI/CD with Security, Deploy & ZAP Scans

on:
  push:
    branches:
      - "feature/*"   # Run full pipeline for feature branches
      - "main"        # Run after merge to main (prod deploy)
  pull_request:
    branches:
      - "main"

env:
  FRONTEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/frontend-app
  BACKEND_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/backend-app

jobs:
  # ... [everything stays exactly as before, no changes to stages] ...

  # --------------------------------------------------------
  # 6️⃣ DEPLOY TO ANGO WEB VM (TEST ENV)
  # --------------------------------------------------------
  deploy_test:
    runs-on: ubuntu-latest
    # Run for both feature and main branches
    if: startsWith(github.ref, 'refs/heads/feature/')
    needs: [trivy]
    steps:
      - name: Deploy Docker containers to AngoWeb test VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.TEST_SERVER_IP }}
          username: ${{ secrets.VM_USER }}
          password: ${{ secrets.VM_PASS }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull $FRONTEND_IMAGE:latest
            docker pull $BACKEND_IMAGE:latest

            docker stop frontend-app || true && docker rm frontend-app || true
            docker stop backend-app || true && docker rm backend-app || true

            docker run -d --name frontend-app -p 80:80 $FRONTEND_IMAGE:latest
            docker run -d --name backend-app -p 3000:3000 $BACKEND_IMAGE:latest

  # --------------------------------------------------------
  # 7️⃣ ZAP SCANS (run after test deploy)
  # --------------------------------------------------------
  zap_baseline:
    runs-on: ubuntu-latest
    needs: [deploy_test]
    steps:
      - name: Run ZAP Baseline Scan
        uses: zaproxy/action-baseline@v0.7.0
        with:
          target: "http://${{ secrets.TEST_SERVER_IP }}"
      - uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-report
          path: report_html.html

  zap_full:
    runs-on: ubuntu-latest
    needs: [deploy_test]
    steps:
      - name: Run ZAP Full Scan
        uses: zaproxy/action-full-scan@v0.7.0
        with:
          target: "http://${{ secrets.TEST_SERVER_IP }}"
      - uses: actions/upload-artifact@v4
        with:
          name: zap-full-report
          path: report_html.html

  # --------------------------------------------------------
  # 8️⃣ DEPLOY TO PRODUCTION (only after merge to main)
  # --------------------------------------------------------
  deploy_prod:
    runs-on: ubuntu-latest
    needs: [zap_full]
    if: github.ref == 'refs/heads/main'   # deploy only when on main
    steps:
      - name: Manual Approval Notice
        run: echo "Deploying to production after manual approval..."
      - name: Deploy to production VM
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.PROD_SERVER_IP }}
          username: ${{ secrets.PROD_USER }}
          password: ${{ secrets.PROD_PASS }}
          script: |
            docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            docker pull $FRONTEND_IMAGE:latest
            docker pull $BACKEND_IMAGE:latest

            docker stop frontend-prod || true && docker rm frontend-prod || true
            docker stop backend-prod || true && docker rm backend-prod || true

            docker run -d --name frontend-prod -p 80:80 $FRONTEND_IMAGE:latest
            docker run -d --name backend-prod -p 3000:3000 $BACKEND_IMAGE:latest


